{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://@myinan/weather-application/./src/displayWeatherInfo.css","webpack://@myinan/weather-application/./src/getWeatherInfo.css","webpack://@myinan/weather-application/./src/style.css","webpack://@myinan/weather-application/./node_modules/css-loader/dist/runtime/api.js","webpack://@myinan/weather-application/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://@myinan/weather-application/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://@myinan/weather-application/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://@myinan/weather-application/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://@myinan/weather-application/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://@myinan/weather-application/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://@myinan/weather-application/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://@myinan/weather-application/webpack/bootstrap","webpack://@myinan/weather-application/webpack/runtime/compat get default export","webpack://@myinan/weather-application/webpack/runtime/define property getters","webpack://@myinan/weather-application/webpack/runtime/hasOwnProperty shorthand","webpack://@myinan/weather-application/webpack/runtime/nonce","webpack://@myinan/weather-application/./src/style.css?7163","webpack://@myinan/weather-application/./src/events.js","webpack://@myinan/weather-application/./node_modules/date-fns/constructFrom.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/_lib/defaultOptions.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/getDefaultOptions.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/locale/en-US/_lib/formatDistance.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/locale/_lib/buildFormatLongFn.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/locale/en-US/_lib/formatLong.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/locale/en-US/_lib/formatRelative.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/locale/_lib/buildLocalizeFn.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/locale/en-US/_lib/localize.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/locale/_lib/buildMatchFn.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/locale/en-US/_lib/match.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/locale/_lib/buildMatchPatternFn.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/locale/en-US.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/toDate.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/_lib/format/longFormatters.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/_lib/protectedTokens.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/Setter.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/transpose.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/Parser.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/constants.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/constants.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/utils.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/startOfWeek.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/getWeekYear.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/startOfISOWeek.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/getWeek.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/startOfWeekYear.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/getISOWeekYear.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/getISOWeek.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/startOfISOWeekYear.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/parsers/DateParser.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/addDays.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/setDay.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/setISODay.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/getISODay.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/parsers.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/parsers/EraParser.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/parsers/YearParser.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/parsers/LocalWeekYearParser.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/parsers/ISOWeekYearParser.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/parsers/ExtendedYearParser.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/parsers/QuarterParser.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/parsers/StandAloneQuarterParser.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/parsers/MonthParser.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/parsers/StandAloneMonthParser.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/parsers/LocalWeekParser.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/setWeek.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/parsers/ISOWeekParser.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/setISOWeek.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/parsers/DayOfYearParser.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/parsers/DayParser.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/parsers/LocalDayParser.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/parsers/StandAloneLocalDayParser.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/parsers/ISODayParser.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/parsers/AMPMParser.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/parsers/AMPMMidnightParser.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/parsers/DayPeriodParser.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/parsers/Hour1to12Parser.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/parsers/Hour0to23Parser.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/parsers/Hour0To11Parser.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/parsers/Hour1To24Parser.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/parsers/MinuteParser.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/parsers/SecondParser.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/parsers/FractionOfSecondParser.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/parsers/ISOTimezoneWithZParser.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/parsers/ISOTimezoneParser.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/parsers/TimestampSecondsParser.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse/_lib/parsers/TimestampMillisecondsParser.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/parse.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/isValid.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/isDate.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/startOfDay.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/getDayOfYear.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/differenceInCalendarDays.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/startOfYear.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/_lib/addLeadingZeros.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/_lib/format/lightFormatters.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/_lib/format/formatters.mjs","webpack://@myinan/weather-application/./node_modules/date-fns/format.mjs","webpack://@myinan/weather-application/./src/getWeatherInfo.css?c492","webpack://@myinan/weather-application/./src/getWeatherInfo.js","webpack://@myinan/weather-application/./src/displayWeatherInfo.css?3dbf","webpack://@myinan/weather-application/./src/displayWeatherInfo.js","webpack://@myinan/weather-application/./src/index.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.bg-cold {\n  background-color: #0093e9;\n  background-image: linear-gradient(90deg, #0093e9 0%, #80d0c7 100%);\n}\n\n.bg-warm {\n  background-image: linear-gradient(to top, #0ba360 0%, #3cba92 100%);\n}\n\n.bg-hot {\n  background-image: linear-gradient(135deg, #fd6e6a 10%, #ffc600 100%);\n}\n\n.top-left-container,\n.top-right-container {\n  display: flex;\n  flex-direction: column;\n  color: var(--text);\n}\n\n.top-left-container {\n  padding-top: calc(5px + 0.5vw);\n  padding-left: calc(5px + 1.5vw);\n}\n\n.condition {\n  font-size: 4rem;\n}\n\n.city {\n  font-size: 1.8rem;\n}\n\n.date {\n  font-size: 1.2rem;\n}\n\n.local-time {\n  font-size: 1.2rem;\n}\n\n.temperature {\n  font-size: 6rem;\n  font-weight: 700;\n}\n\n.condition-icon {\n  width: 96px;\n  height: 96px;\n}\n\n.top-right-container {\n  align-items: flex-end;\n  padding-top: calc(5px + 0.5vw);\n  padding-right: calc(5px + 1.5vw);\n}\n\n.right-info-container {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.right-info-container svg {\n  width: 48px;\n  height: 48px;\n}\n\n.right-info-container > div {\n  display: flex;\n  gap: 5px;\n}\n\n.right-info-container > div .heading {\n  font-size: 1.8rem;\n}\n\n.right-info-container > div .value {\n  font-size: 2.4rem;\n  font-weight: 700;\n}\n\n.main-bottom-container {\n  display: flex;\n  justify-content: space-around;\n  align-items: flex-end;\n}\n\n.main-bottom-container .item {\n  min-width: 150px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  color: var(--text);\n  margin-bottom: 10px;\n}\n\n.item > * {\n  display: flex;\n  justify-content: center;\n}\n\n.item img {\n  height: 64px;\n  width: 64px;\n  margin: auto;\n}\n\n.main-bottom-container .item > div:nth-child(1) {\n  font-size: 1.8rem;\n}\n\n.main-bottom-container .item > div:nth-child(2) {\n  font-size: 2rem;\n  font-weight: 700;\n}\n\n.main-bottom-container .item > div:nth-child(3) {\n  display: flex;\n  justify-content: space-between;\n  font-size: 1.2rem;\n  font-weight: 700;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/displayWeatherInfo.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,yBAAyB;EACzB,kEAAkE;AACpE;;AAEA;EACE,mEAAmE;AACrE;;AAEA;EACE,oEAAoE;AACtE;;AAEA;;EAEE,aAAa;EACb,sBAAsB;EACtB,kBAAkB;AACpB;;AAEA;EACE,8BAA8B;EAC9B,+BAA+B;AACjC;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,qBAAqB;EACrB,8BAA8B;EAC9B,gCAAgC;AAClC;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,SAAS;AACX;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,aAAa;EACb,QAAQ;AACV;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,6BAA6B;EAC7B,qBAAqB;AACvB;;AAEA;EACE,gBAAgB;EAChB,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,kBAAkB;EAClB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,uBAAuB;AACzB;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,YAAY;AACd;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,iBAAiB;EACjB,gBAAgB;AAClB\",\"sourcesContent\":[\".bg-cold {\\n  background-color: #0093e9;\\n  background-image: linear-gradient(90deg, #0093e9 0%, #80d0c7 100%);\\n}\\n\\n.bg-warm {\\n  background-image: linear-gradient(to top, #0ba360 0%, #3cba92 100%);\\n}\\n\\n.bg-hot {\\n  background-image: linear-gradient(135deg, #fd6e6a 10%, #ffc600 100%);\\n}\\n\\n.top-left-container,\\n.top-right-container {\\n  display: flex;\\n  flex-direction: column;\\n  color: var(--text);\\n}\\n\\n.top-left-container {\\n  padding-top: calc(5px + 0.5vw);\\n  padding-left: calc(5px + 1.5vw);\\n}\\n\\n.condition {\\n  font-size: 4rem;\\n}\\n\\n.city {\\n  font-size: 1.8rem;\\n}\\n\\n.date {\\n  font-size: 1.2rem;\\n}\\n\\n.local-time {\\n  font-size: 1.2rem;\\n}\\n\\n.temperature {\\n  font-size: 6rem;\\n  font-weight: 700;\\n}\\n\\n.condition-icon {\\n  width: 96px;\\n  height: 96px;\\n}\\n\\n.top-right-container {\\n  align-items: flex-end;\\n  padding-top: calc(5px + 0.5vw);\\n  padding-right: calc(5px + 1.5vw);\\n}\\n\\n.right-info-container {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 10px;\\n}\\n\\n.right-info-container svg {\\n  width: 48px;\\n  height: 48px;\\n}\\n\\n.right-info-container > div {\\n  display: flex;\\n  gap: 5px;\\n}\\n\\n.right-info-container > div .heading {\\n  font-size: 1.8rem;\\n}\\n\\n.right-info-container > div .value {\\n  font-size: 2.4rem;\\n  font-weight: 700;\\n}\\n\\n.main-bottom-container {\\n  display: flex;\\n  justify-content: space-around;\\n  align-items: flex-end;\\n}\\n\\n.main-bottom-container .item {\\n  min-width: 150px;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  color: var(--text);\\n  margin-bottom: 10px;\\n}\\n\\n.item > * {\\n  display: flex;\\n  justify-content: center;\\n}\\n\\n.item img {\\n  height: 64px;\\n  width: 64px;\\n  margin: auto;\\n}\\n\\n.main-bottom-container .item > div:nth-child(1) {\\n  font-size: 1.8rem;\\n}\\n\\n.main-bottom-container .item > div:nth-child(2) {\\n  font-size: 2rem;\\n  font-weight: 700;\\n}\\n\\n.main-bottom-container .item > div:nth-child(3) {\\n  display: flex;\\n  justify-content: space-between;\\n  font-size: 1.2rem;\\n  font-weight: 700;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.top-center-container {\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n}\n\n.search-form {\n  margin-top: 4vw;\n  display: flex;\n  flex-direction: column;\n  width: min-content;\n  gap: 5px;\n  font-size: 2rem;\n  color: var(--text);\n}\n\n.search-box {\n  width: fit-content;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  border-bottom: 2px solid white;\n}\n\n.search-box > input {\n  border: none;\n  background-color: rgba(0, 0, 0, 0);\n  color: inherit;\n  font-size: inherit;\n  margin-bottom: 3px;\n  width: clamp(100px, 25vw, 300px);\n}\n\n.search-box > input:focus {\n  border: none;\n  outline: none;\n}\n\n.search-box > button {\n  border: none;\n  border-radius: 5px;\n  font-size: 1.2rem;\n  height: fit-content;\n  padding: 5px;\n  margin-bottom: 3px;\n}\n\n.search-box > button:hover {\n  cursor: pointer;\n  background-color: var(--hover-bg);\n}\n\n.error-text {\n  background-color: var(--error-bg);\n  color: var(--text);\n  border-radius: 5px;\n}\n\n.display-none {\n  display: none;\n}\n\n.checkbox-container {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  gap: 20px;\n}\n\n.radios-container {\n  display: flex;\n  gap: 20px;\n}\n\n/* Customize the label (the container) */\n.container {\n  position: relative;\n  padding-left: 35px;\n  cursor: pointer;\n  font-size: 22px;\n  user-select: none;\n}\n\n/* Hide the browser's default radio button */\n.container input {\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n}\n\n/* Create a custom radio button */\n.checkmark {\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 25px;\n  width: 25px;\n  background-color: #eee;\n  border-radius: 50%;\n}\n\n/* On mouse-over, add a grey background color */\n.container:hover input ~ .checkmark {\n  background-color: #ccc;\n}\n\n/* When the radio button is checked, add a blue background */\n.container input:checked ~ .checkmark {\n  background-color: #2196f3;\n}\n\n/* Create the indicator (the dot/circle - hidden when not checked) */\n.checkmark:after {\n  content: \"\";\n  position: absolute;\n  display: none;\n}\n\n/* Show the indicator (dot/circle) when checked */\n.container input:checked ~ .checkmark:after {\n  display: block;\n}\n\n/* Style the indicator (dot/circle) */\n.container .checkmark:after {\n  top: 9px;\n  left: 9px;\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background: white;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/getWeatherInfo.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,aAAa;EACb,uBAAuB;EACvB,uBAAuB;AACzB;;AAEA;EACE,eAAe;EACf,aAAa;EACb,sBAAsB;EACtB,kBAAkB;EAClB,QAAQ;EACR,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,mBAAmB;EACnB,QAAQ;EACR,8BAA8B;AAChC;;AAEA;EACE,YAAY;EACZ,kCAAkC;EAClC,cAAc;EACd,kBAAkB;EAClB,kBAAkB;EAClB,gCAAgC;AAClC;;AAEA;EACE,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,YAAY;EACZ,kBAAkB;EAClB,iBAAiB;EACjB,mBAAmB;EACnB,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,iCAAiC;AACnC;;AAEA;EACE,iCAAiC;EACjC,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,2BAA2B;EAC3B,eAAe;EACf,SAAS;AACX;;AAEA;EACE,aAAa;EACb,SAAS;AACX;;AAEA,wCAAwC;AACxC;EACE,kBAAkB;EAClB,kBAAkB;EAClB,eAAe;EACf,eAAe;EACf,iBAAiB;AACnB;;AAEA,4CAA4C;AAC5C;EACE,kBAAkB;EAClB,UAAU;EACV,eAAe;EACf,SAAS;EACT,QAAQ;AACV;;AAEA,iCAAiC;AACjC;EACE,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,YAAY;EACZ,WAAW;EACX,sBAAsB;EACtB,kBAAkB;AACpB;;AAEA,+CAA+C;AAC/C;EACE,sBAAsB;AACxB;;AAEA,4DAA4D;AAC5D;EACE,yBAAyB;AAC3B;;AAEA,oEAAoE;AACpE;EACE,WAAW;EACX,kBAAkB;EAClB,aAAa;AACf;;AAEA,iDAAiD;AACjD;EACE,cAAc;AAChB;;AAEA,qCAAqC;AACrC;EACE,QAAQ;EACR,SAAS;EACT,UAAU;EACV,WAAW;EACX,kBAAkB;EAClB,iBAAiB;AACnB\",\"sourcesContent\":[\".top-center-container {\\n  display: flex;\\n  justify-content: center;\\n  align-items: flex-start;\\n}\\n\\n.search-form {\\n  margin-top: 4vw;\\n  display: flex;\\n  flex-direction: column;\\n  width: min-content;\\n  gap: 5px;\\n  font-size: 2rem;\\n  color: var(--text);\\n}\\n\\n.search-box {\\n  width: fit-content;\\n  display: flex;\\n  align-items: center;\\n  gap: 5px;\\n  border-bottom: 2px solid white;\\n}\\n\\n.search-box > input {\\n  border: none;\\n  background-color: rgba(0, 0, 0, 0);\\n  color: inherit;\\n  font-size: inherit;\\n  margin-bottom: 3px;\\n  width: clamp(100px, 25vw, 300px);\\n}\\n\\n.search-box > input:focus {\\n  border: none;\\n  outline: none;\\n}\\n\\n.search-box > button {\\n  border: none;\\n  border-radius: 5px;\\n  font-size: 1.2rem;\\n  height: fit-content;\\n  padding: 5px;\\n  margin-bottom: 3px;\\n}\\n\\n.search-box > button:hover {\\n  cursor: pointer;\\n  background-color: var(--hover-bg);\\n}\\n\\n.error-text {\\n  background-color: var(--error-bg);\\n  color: var(--text);\\n  border-radius: 5px;\\n}\\n\\n.display-none {\\n  display: none;\\n}\\n\\n.checkbox-container {\\n  display: flex;\\n  align-items: center;\\n  justify-content: flex-start;\\n  flex-wrap: wrap;\\n  gap: 20px;\\n}\\n\\n.radios-container {\\n  display: flex;\\n  gap: 20px;\\n}\\n\\n/* Customize the label (the container) */\\n.container {\\n  position: relative;\\n  padding-left: 35px;\\n  cursor: pointer;\\n  font-size: 22px;\\n  user-select: none;\\n}\\n\\n/* Hide the browser's default radio button */\\n.container input {\\n  position: absolute;\\n  opacity: 0;\\n  cursor: pointer;\\n  height: 0;\\n  width: 0;\\n}\\n\\n/* Create a custom radio button */\\n.checkmark {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  height: 25px;\\n  width: 25px;\\n  background-color: #eee;\\n  border-radius: 50%;\\n}\\n\\n/* On mouse-over, add a grey background color */\\n.container:hover input ~ .checkmark {\\n  background-color: #ccc;\\n}\\n\\n/* When the radio button is checked, add a blue background */\\n.container input:checked ~ .checkmark {\\n  background-color: #2196f3;\\n}\\n\\n/* Create the indicator (the dot/circle - hidden when not checked) */\\n.checkmark:after {\\n  content: \\\"\\\";\\n  position: absolute;\\n  display: none;\\n}\\n\\n/* Show the indicator (dot/circle) when checked */\\n.container input:checked ~ .checkmark:after {\\n  display: block;\\n}\\n\\n/* Style the indicator (dot/circle) */\\n.container .checkmark:after {\\n  top: 9px;\\n  left: 9px;\\n  width: 8px;\\n  height: 8px;\\n  border-radius: 50%;\\n  background: white;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n\n  --text: #ffffff;\n  --hover-bg: #d1d5db;\n  --error-bg: #800020;\n}\n\nhtml {\n  font-size: calc(8px + 0.4vw);\n}\n\nbody {\n  min-height: 100svh;\n  display: grid;\n  grid-template-rows: 1fr 8fr 1fr;\n}\n\n.header-container {\n  box-shadow: 0px 10px 64px -3px rgba(0, 0, 0, 0.53);\n  color: var(--text);\n  font-size: clamp(1.8rem, 3.5vw, 3rem);\n  padding: calc(5px + 0.5vw);\n}\n\n.main-container {\n  display: grid;\n  grid-template-rows: 2fr 1fr;\n}\n\n.main-top-container {\n  display: grid;\n  grid-template-columns: 1.5fr minmax(100px, 2fr) 1.5fr;\n}\n\n.footer-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px -10px 64px -3px rgba(0, 0, 0, 0.53);\n}\n\n.footer-container > * {\n  display: flex;\n  height: 80%;\n  align-items: center;\n  color: var(--text);\n  padding: 0px 20px;\n}\n\n.footer-container > *:not(:last-child) {\n  font-size: 2rem;\n  font-weight: 700;\n  border-right: 3px solid white;\n}\n\n.footer-container div:last-child {\n  font-size: 1.5rem;\n  font-weight: 500;\n}\n\n.footer-container a {\n  text-decoration: none;\n  color: gray;\n}\n\n.footer-container svg:hover {\n  cursor: pointer;\n}\n\n#loading {\n  display: none;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(255, 255, 255, 0.7);\n  justify-content: center;\n  align-items: center;\n  z-index: 999;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/style.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,UAAU;EACV,SAAS;EACT,sBAAsB;;EAEtB,eAAe;EACf,mBAAmB;EACnB,mBAAmB;AACrB;;AAEA;EACE,4BAA4B;AAC9B;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,+BAA+B;AACjC;;AAEA;EACE,kDAAkD;EAClD,kBAAkB;EAClB,qCAAqC;EACrC,0BAA0B;AAC5B;;AAEA;EACE,aAAa;EACb,2BAA2B;AAC7B;;AAEA;EACE,aAAa;EACb,qDAAqD;AACvD;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,mDAAmD;AACrD;;AAEA;EACE,aAAa;EACb,WAAW;EACX,mBAAmB;EACnB,kBAAkB;EAClB,iBAAiB;AACnB;;AAEA;EACE,eAAe;EACf,gBAAgB;EAChB,6BAA6B;AAC/B;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,qBAAqB;EACrB,WAAW;AACb;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,eAAe;EACf,MAAM;EACN,OAAO;EACP,WAAW;EACX,YAAY;EACZ,0CAA0C;EAC1C,uBAAuB;EACvB,mBAAmB;EACnB,YAAY;AACd\",\"sourcesContent\":[\"* {\\n  padding: 0;\\n  margin: 0;\\n  box-sizing: border-box;\\n\\n  --text: #ffffff;\\n  --hover-bg: #d1d5db;\\n  --error-bg: #800020;\\n}\\n\\nhtml {\\n  font-size: calc(8px + 0.4vw);\\n}\\n\\nbody {\\n  min-height: 100svh;\\n  display: grid;\\n  grid-template-rows: 1fr 8fr 1fr;\\n}\\n\\n.header-container {\\n  box-shadow: 0px 10px 64px -3px rgba(0, 0, 0, 0.53);\\n  color: var(--text);\\n  font-size: clamp(1.8rem, 3.5vw, 3rem);\\n  padding: calc(5px + 0.5vw);\\n}\\n\\n.main-container {\\n  display: grid;\\n  grid-template-rows: 2fr 1fr;\\n}\\n\\n.main-top-container {\\n  display: grid;\\n  grid-template-columns: 1.5fr minmax(100px, 2fr) 1.5fr;\\n}\\n\\n.footer-container {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  box-shadow: 0px -10px 64px -3px rgba(0, 0, 0, 0.53);\\n}\\n\\n.footer-container > * {\\n  display: flex;\\n  height: 80%;\\n  align-items: center;\\n  color: var(--text);\\n  padding: 0px 20px;\\n}\\n\\n.footer-container > *:not(:last-child) {\\n  font-size: 2rem;\\n  font-weight: 700;\\n  border-right: 3px solid white;\\n}\\n\\n.footer-container div:last-child {\\n  font-size: 1.5rem;\\n  font-weight: 500;\\n}\\n\\n.footer-container a {\\n  text-decoration: none;\\n  color: gray;\\n}\\n\\n.footer-container svg:hover {\\n  cursor: pointer;\\n}\\n\\n#loading {\\n  display: none;\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  background-color: rgba(255, 255, 255, 0.7);\\n  justify-content: center;\\n  align-items: center;\\n  z-index: 999;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.nc = undefined;","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","//events - a basic (publish subscribe) pattern\n\nexport const events = {\n  events: {},\n  on: function (eventName, fn) {\n    this.events[eventName] = this.events[eventName] || [];\n    this.events[eventName].push(fn);\n  },\n  off: function (eventName, fn) {\n    if (this.events[eventName]) {\n      for (var i = 0; i < this.events[eventName].length; i++) {\n        if (this.events[eventName][i] === fn) {\n          this.events[eventName].splice(i, 1);\n          break;\n        }\n      }\n    }\n  },\n  emit: function (eventName, data) {\n    if (this.events[eventName]) {\n      this.events[eventName].forEach(function (fn) {\n        fn(data);\n      });\n    }\n  },\n};\n","/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from 'date-fns'\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use contrustor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   )\n * }\n */\nexport function constructFrom(date, value) {\n  if (date instanceof Date) {\n    return new date.constructor(value);\n  } else {\n    return new Date(value);\n  }\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","import { getDefaultOptions as getInternalDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * @name getDefaultOptions\n * @category Common Helpers\n * @summary Get default options.\n * @pure false\n *\n * @description\n * Returns an object that contains defaults for\n * `options.locale`, `options.weekStartsOn` and `options.firstWeekContainsDate`\n * arguments for all functions.\n *\n * You can change these with [setDefaultOptions](https://date-fns.org/docs/setDefaultOptions).\n *\n * @returns The default options\n *\n * @example\n * const result = getDefaultOptions()\n * //=> {}\n *\n * @example\n * setDefaultOptions({ weekStarsOn: 1, firstWeekContainsDate: 4 })\n * const result = getDefaultOptions()\n * //=> { weekStarsOn: 1, firstWeekContainsDate: 4 }\n */\nexport function getDefaultOptions() {\n  return Object.assign({}, getInternalDefaultOptions());\n}\n\n// Fallback for modularized imports:\nexport default getDefaultOptions;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.mjs\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/* eslint-disable no-unused-vars */\n\n/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.mjs\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.mjs\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.mjs\";\nimport { formatLong } from \"./en-US/_lib/formatLong.mjs\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.mjs\";\nimport { localize } from \"./en-US/_lib/localize.mjs\";\nimport { match } from \"./en-US/_lib/match.mjs\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument) {\n  const argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === \"object\" && argStr === \"[object Date]\")\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new argument.constructor(+argument);\n  } else if (\n    typeof argument === \"number\" ||\n    argStr === \"[object Number]\" ||\n    typeof argument === \"string\" ||\n    argStr === \"[object String]\"\n  ) {\n    // TODO: Can we get rid of as?\n    return new Date(argument);\n  } else {\n    // TODO: Can we get rid of as?\n    return new Date(NaN);\n  }\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { transpose } from \"../../transpose.mjs\";\nimport { constructFrom } from \"../../constructFrom.mjs\";\n\nconst TIMEZONE_UNIT_PRIORITY = 10;\n\nexport class Setter {\n  subPriority = 0;\n\n  validate(_utcDate, _options) {\n    return true;\n  }\n}\n\nexport class ValueSetter extends Setter {\n  constructor(\n    value,\n\n    validateValue,\n\n    setValue,\n\n    priority,\n    subPriority,\n  ) {\n    super();\n    this.value = value;\n    this.validateValue = validateValue;\n    this.setValue = setValue;\n    this.priority = priority;\n    if (subPriority) {\n      this.subPriority = subPriority;\n    }\n  }\n\n  validate(date, options) {\n    return this.validateValue(date, this.value, options);\n  }\n\n  set(date, flags, options) {\n    return this.setValue(date, flags, this.value, options);\n  }\n}\n\nexport class DateToSystemTimezoneSetter extends Setter {\n  priority = TIMEZONE_UNIT_PRIORITY;\n  subPriority = -1;\n  set(date, flags) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(date, transpose(date, Date));\n  }\n}\n","import { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name transpose\n * @category Generic Helpers\n * @summary Transpose the date to the given constructor.\n *\n * @description\n * The function transposes the date to the given constructor. It helps you\n * to transpose the date in the system time zone to say `UTCDate` or any other\n * date extension.\n *\n * @typeParam DateInputType - The input `Date` type derived from the passed argument.\n * @typeParam DateOutputType - The output `Date` type derived from the passed constructor.\n *\n * @param fromDate - The date to use values from\n * @param constructor - The date constructor to use\n *\n * @returns Date transposed to the given constructor\n *\n * @example\n * // Create July 10, 2022 00:00 in locale time zone\n * const date = new Date(2022, 6, 10)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0800 (Singapore Standard Time)'\n *\n * @example\n * // Transpose the date to July 10, 2022 00:00 in UTC\n * transpose(date, UTCDate)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0000 (Coordinated Universal Time)'\n */\nexport function transpose(fromDate, constructor) {\n  const date =\n    constructor instanceof Date\n      ? constructFrom(constructor, 0)\n      : new constructor(0);\n  date.setFullYear(\n    fromDate.getFullYear(),\n    fromDate.getMonth(),\n    fromDate.getDate(),\n  );\n  date.setHours(\n    fromDate.getHours(),\n    fromDate.getMinutes(),\n    fromDate.getSeconds(),\n    fromDate.getMilliseconds(),\n  );\n  return date;\n}\n\n// Fallback for modularized imports:\nexport default transpose;\n","import { ValueSetter } from \"./Setter.mjs\";\n\nexport class Parser {\n  run(dateString, token, match, options) {\n    const result = this.parse(dateString, token, match, options);\n    if (!result) {\n      return null;\n    }\n\n    return {\n      setter: new ValueSetter(\n        result.value,\n        this.validate,\n        this.set,\n        this.priority,\n        this.subPriority,\n      ),\n      rest: result.rest,\n    };\n  }\n\n  validate(_utcDate, _value, _options) {\n    return true;\n  }\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n","export const numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/, // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/, // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/, // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/, // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/, // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/, // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/, // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/, // 0 to 12\n  minute: /^[0-5]?\\d/, // 0 to 59\n  second: /^[0-5]?\\d/, // 0 to 59\n\n  singleDigit: /^\\d/, // 0 to 9\n  twoDigits: /^\\d{1,2}/, // 0 to 99\n  threeDigits: /^\\d{1,3}/, // 0 to 999\n  fourDigits: /^\\d{1,4}/, // 0 to 9999\n\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/, // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/, // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/, // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/, // 0 to 9999, -0 to -9999\n};\n\nexport const timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/,\n};\n","import {\n  millisecondsInHour,\n  millisecondsInMinute,\n  millisecondsInSecond,\n} from \"../../constants.mjs\";\nimport { numericPatterns } from \"./constants.mjs\";\n\nexport function mapValue(parseFnResult, mapFn) {\n  if (!parseFnResult) {\n    return parseFnResult;\n  }\n\n  return {\n    value: mapFn(parseFnResult.value),\n    rest: parseFnResult.rest,\n  };\n}\n\nexport function parseNumericPattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  return {\n    value: parseInt(matchResult[0], 10),\n    rest: dateString.slice(matchResult[0].length),\n  };\n}\n\nexport function parseTimezonePattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  // Input is 'Z'\n  if (matchResult[0] === \"Z\") {\n    return {\n      value: 0,\n      rest: dateString.slice(1),\n    };\n  }\n\n  const sign = matchResult[1] === \"+\" ? 1 : -1;\n  const hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  const minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  const seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n\n  return {\n    value:\n      sign *\n      (hours * millisecondsInHour +\n        minutes * millisecondsInMinute +\n        seconds * millisecondsInSecond),\n    rest: dateString.slice(matchResult[0].length),\n  };\n}\n\nexport function parseAnyDigitsSigned(dateString) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, dateString);\n}\n\nexport function parseNDigits(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, dateString);\n    default:\n      return parseNumericPattern(new RegExp(\"^\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\n\nexport function parseNDigitsSigned(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, dateString);\n    default:\n      return parseNumericPattern(new RegExp(\"^-?\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\n\nexport function dayPeriodEnumToHours(dayPeriod) {\n  switch (dayPeriod) {\n    case \"morning\":\n      return 4;\n    case \"evening\":\n      return 17;\n    case \"pm\":\n    case \"noon\":\n    case \"afternoon\":\n      return 12;\n    case \"am\":\n    case \"midnight\":\n    case \"night\":\n    default:\n      return 0;\n  }\n}\n\nexport function normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  const isCommonEra = currentYear > 0;\n  // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n  const absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n\n  let result;\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    const rangeEnd = absCurrentYear + 50;\n    const rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    const isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nexport function isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n","import { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { startOfWeek } from \"./startOfWeek.mjs\";\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date) {\n  return startOfWeek(date, { weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { startOfWeekYear } from \"./startOfWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport function getWeek(date, options) {\n  const _date = toDate(date);\n  const diff =\n    startOfWeek(_date, options).getTime() -\n    startOfWeekYear(_date, options).getTime();\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { getWeekYear } from \"./getWeekYear.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date) {\n  const _date = toDate(date);\n  const diff =\n    startOfISOWeek(_date).getTime() - startOfISOWeekYear(_date).getTime();\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { getISOWeekYear } from \"./getISOWeekYear.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date) {\n  const year = getISOWeekYear(date);\n  const fourthOfJanuary = constructFrom(date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport {\n  isLeapYearIndex,\n  parseNDigits,\n  parseNumericPattern,\n} from \"../utils.mjs\";\n\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst DAYS_IN_MONTH_LEAP_YEAR = [\n  31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31,\n];\n\n// Day of the month\nexport class DateParser extends Parser {\n  priority = 90;\n  subPriority = 1;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"d\":\n        return parseNumericPattern(numericPatterns.date, dateString);\n      case \"do\":\n        return match.ordinalNumber(dateString, { unit: \"date\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = isLeapYearIndex(year);\n    const month = date.getMonth();\n    if (isLeapYear) {\n      return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n    } else {\n      return value >= 1 && value <= DAYS_IN_MONTH[month];\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setDate(value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport function addDays(date, amount) {\n  const _date = toDate(date);\n  if (isNaN(amount)) return constructFrom(date, NaN);\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addDays;\n","import { addDays } from \"./addDays.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link setDay} function options.\n */\n\n/**\n * @name setDay\n * @category Weekday Helpers\n * @summary Set the day of the week to the given date.\n *\n * @description\n * Set the day of the week to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param day - The day of the week of the new date\n * @param options - An object with options.\n *\n * @returns The new date with the day of the week set\n *\n * @example\n * // Set week day to Sunday, with the default weekStartsOn of Sunday:\n * const result = setDay(new Date(2014, 8, 1), 0)\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // Set week day to Sunday, with a weekStartsOn of Monday:\n * const result = setDay(new Date(2014, 8, 1), 0, { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport function setDay(date, day, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const currentDay = _date.getDay();\n\n  const remainder = day % 7;\n  const dayIndex = (remainder + 7) % 7;\n\n  const delta = 7 - weekStartsOn;\n  const diff =\n    day < 0 || day > 6\n      ? day - ((currentDay + delta) % 7)\n      : ((dayIndex + delta) % 7) - ((currentDay + delta) % 7);\n  return addDays(_date, diff);\n}\n\n// Fallback for modularized imports:\nexport default setDay;\n","import { addDays } from \"./addDays.mjs\";\nimport { getISODay } from \"./getISODay.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name setISODay\n * @category Weekday Helpers\n * @summary Set the day of the ISO week to the given date.\n *\n * @description\n * Set the day of the ISO week to the given date.\n * ISO week starts with Monday.\n * 7 is the index of Sunday, 1 is the index of Monday etc.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param day - The day of the ISO week of the new date\n *\n * @returns The new date with the day of the ISO week set\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * const result = setISODay(new Date(2014, 8, 1), 7)\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport function setISODay(date, day) {\n  const _date = toDate(date);\n  const currentDay = getISODay(_date);\n  const diff = day - currentDay;\n  return addDays(_date, diff);\n}\n\n// Fallback for modularized imports:\nexport default setISODay;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISODay\n * @category Weekday Helpers\n * @summary Get the day of the ISO week of the given date.\n *\n * @description\n * Get the day of the ISO week of the given date,\n * which is 7 for Sunday, 1 for Monday etc.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of ISO week\n *\n * @example\n * // Which day of the ISO week is 26 February 2012?\n * const result = getISODay(new Date(2012, 1, 26))\n * //=> 7\n */\nexport function getISODay(date) {\n  const _date = toDate(date);\n  let day = _date.getDay();\n\n  if (day === 0) {\n    day = 7;\n  }\n\n  return day;\n}\n\n// Fallback for modularized imports:\nexport default getISODay;\n","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const utcDate = new Date(\n    Date.UTC(\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate(),\n      date.getHours(),\n      date.getMinutes(),\n      date.getSeconds(),\n      date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}\n","import { EraParser } from \"./parsers/EraParser.mjs\";\nimport { YearParser } from \"./parsers/YearParser.mjs\";\nimport { LocalWeekYearParser } from \"./parsers/LocalWeekYearParser.mjs\";\nimport { ISOWeekYearParser } from \"./parsers/ISOWeekYearParser.mjs\";\nimport { ExtendedYearParser } from \"./parsers/ExtendedYearParser.mjs\";\nimport { QuarterParser } from \"./parsers/QuarterParser.mjs\";\nimport { StandAloneQuarterParser } from \"./parsers/StandAloneQuarterParser.mjs\";\nimport { MonthParser } from \"./parsers/MonthParser.mjs\";\nimport { StandAloneMonthParser } from \"./parsers/StandAloneMonthParser.mjs\";\nimport { LocalWeekParser } from \"./parsers/LocalWeekParser.mjs\";\nimport { ISOWeekParser } from \"./parsers/ISOWeekParser.mjs\";\nimport { DateParser } from \"./parsers/DateParser.mjs\";\nimport { DayOfYearParser } from \"./parsers/DayOfYearParser.mjs\";\nimport { DayParser } from \"./parsers/DayParser.mjs\";\nimport { LocalDayParser } from \"./parsers/LocalDayParser.mjs\";\nimport { StandAloneLocalDayParser } from \"./parsers/StandAloneLocalDayParser.mjs\";\nimport { ISODayParser } from \"./parsers/ISODayParser.mjs\";\nimport { AMPMParser } from \"./parsers/AMPMParser.mjs\";\nimport { AMPMMidnightParser } from \"./parsers/AMPMMidnightParser.mjs\";\nimport { DayPeriodParser } from \"./parsers/DayPeriodParser.mjs\";\nimport { Hour1to12Parser } from \"./parsers/Hour1to12Parser.mjs\";\nimport { Hour0to23Parser } from \"./parsers/Hour0to23Parser.mjs\";\nimport { Hour0To11Parser } from \"./parsers/Hour0To11Parser.mjs\";\nimport { Hour1To24Parser } from \"./parsers/Hour1To24Parser.mjs\";\nimport { MinuteParser } from \"./parsers/MinuteParser.mjs\";\nimport { SecondParser } from \"./parsers/SecondParser.mjs\";\nimport { FractionOfSecondParser } from \"./parsers/FractionOfSecondParser.mjs\";\nimport { ISOTimezoneWithZParser } from \"./parsers/ISOTimezoneWithZParser.mjs\";\nimport { ISOTimezoneParser } from \"./parsers/ISOTimezoneParser.mjs\";\nimport { TimestampSecondsParser } from \"./parsers/TimestampSecondsParser.mjs\";\nimport { TimestampMillisecondsParser } from \"./parsers/TimestampMillisecondsParser.mjs\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any -- It's ok, we want any here\nexport const parsers = {\n  G: new EraParser(),\n  y: new YearParser(),\n  Y: new LocalWeekYearParser(),\n  R: new ISOWeekYearParser(),\n  u: new ExtendedYearParser(),\n  Q: new QuarterParser(),\n  q: new StandAloneQuarterParser(),\n  M: new MonthParser(),\n  L: new StandAloneMonthParser(),\n  w: new LocalWeekParser(),\n  I: new ISOWeekParser(),\n  d: new DateParser(),\n  D: new DayOfYearParser(),\n  E: new DayParser(),\n  e: new LocalDayParser(),\n  c: new StandAloneLocalDayParser(),\n  i: new ISODayParser(),\n  a: new AMPMParser(),\n  b: new AMPMMidnightParser(),\n  B: new DayPeriodParser(),\n  h: new Hour1to12Parser(),\n  H: new Hour0to23Parser(),\n  K: new Hour0To11Parser(),\n  k: new Hour1To24Parser(),\n  m: new MinuteParser(),\n  s: new SecondParser(),\n  S: new FractionOfSecondParser(),\n  X: new ISOTimezoneWithZParser(),\n  x: new ISOTimezoneParser(),\n  t: new TimestampSecondsParser(),\n  T: new TimestampMillisecondsParser(),\n};\n","import { Parser } from \"../Parser.mjs\";\n\nexport class EraParser extends Parser {\n  priority = 140;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return (\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n\n      // A, B\n      case \"GGGGG\":\n        return match.era(dateString, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return (\n          match.era(dateString, { width: \"wide\" }) ||\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n    }\n  }\n\n  set(date, flags, value) {\n    flags.era = value;\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"R\", \"u\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.mjs\";\n\n// From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n// | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n// |----------|-------|----|-------|-------|-------|\n// | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n// | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n// | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n// | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n// | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\nexport class YearParser extends Parser {\n  priority = 130;\n  incompatibleTokens = [\"Y\", \"R\", \"u\", \"w\", \"I\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n\n  parse(dateString, token, match) {\n    const valueCallback = (year) => ({\n      year,\n      isTwoDigitYear: token === \"yy\",\n    });\n\n    switch (token) {\n      case \"y\":\n        return mapValue(parseNDigits(4, dateString), valueCallback);\n      case \"yo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"year\",\n          }),\n          valueCallback,\n        );\n      default:\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value) {\n    const currentYear = date.getFullYear();\n\n    if (value.isTwoDigitYear) {\n      const normalizedTwoDigitYear = normalizeTwoDigitYear(\n        value.year,\n        currentYear,\n      );\n      date.setFullYear(normalizedTwoDigitYear, 0, 1);\n      date.setHours(0, 0, 0, 0);\n      return date;\n    }\n\n    const year =\n      !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setFullYear(year, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n}\n","import { getWeekYear } from \"../../../getWeekYear.mjs\";\nimport { startOfWeek } from \"../../../startOfWeek.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.mjs\";\n\n// Local week-numbering year\nexport class LocalWeekYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token, match) {\n    const valueCallback = (year) => ({\n      year,\n      isTwoDigitYear: token === \"YY\",\n    });\n\n    switch (token) {\n      case \"Y\":\n        return mapValue(parseNDigits(4, dateString), valueCallback);\n      case \"Yo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"year\",\n          }),\n          valueCallback,\n        );\n      default:\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value, options) {\n    const currentYear = getWeekYear(date, options);\n\n    if (value.isTwoDigitYear) {\n      const normalizedTwoDigitYear = normalizeTwoDigitYear(\n        value.year,\n        currentYear,\n      );\n      date.setFullYear(\n        normalizedTwoDigitYear,\n        0,\n        options.firstWeekContainsDate,\n      );\n      date.setHours(0, 0, 0, 0);\n      return startOfWeek(date, options);\n    }\n\n    const year =\n      !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setFullYear(year, 0, options.firstWeekContainsDate);\n    date.setHours(0, 0, 0, 0);\n    return startOfWeek(date, options);\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"Q\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { startOfISOWeek } from \"../../../startOfISOWeek.mjs\";\nimport { constructFrom } from \"../../../constructFrom.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigitsSigned } from \"../utils.mjs\";\n\n// ISO week-numbering year\nexport class ISOWeekYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"R\") {\n      return parseNDigitsSigned(4, dateString);\n    }\n\n    return parseNDigitsSigned(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    const firstWeekOfYear = constructFrom(date, 0);\n    firstWeekOfYear.setFullYear(value, 0, 4);\n    firstWeekOfYear.setHours(0, 0, 0, 0);\n    return startOfISOWeek(firstWeekOfYear);\n  }\n\n  incompatibleTokens = [\n    \"G\",\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"Q\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { parseNDigitsSigned } from \"../utils.mjs\";\n\nexport class ExtendedYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"u\") {\n      return parseNDigitsSigned(4, dateString);\n    }\n\n    return parseNDigitsSigned(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"G\", \"y\", \"Y\", \"R\", \"w\", \"I\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { parseNDigits } from \"../utils.mjs\";\n\nexport class QuarterParser extends Parser {\n  priority = 120;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n      case \"QQ\": // 01, 02, 03, 04\n        return parseNDigits(token.length, dateString);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return match.ordinalNumber(dateString, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return (\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return (\n          match.quarter(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 4;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth((value - 1) * 3, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { parseNDigits } from \"../utils.mjs\";\n\nexport class StandAloneQuarterParser extends Parser {\n  priority = 120;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n      case \"qq\": // 01, 02, 03, 04\n        return parseNDigits(token.length, dateString);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return match.ordinalNumber(dateString, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return (\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"standalone\",\n          })\n        );\n\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return (\n          match.quarter(dateString, {\n            width: \"wide\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"standalone\",\n          })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 4;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth((value - 1) * 3, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class MonthParser extends Parser {\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n\n  priority = 110;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => value - 1;\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"M\":\n        return mapValue(\n          parseNumericPattern(numericPatterns.month, dateString),\n          valueCallback,\n        );\n      // 01, 02, ..., 12\n      case \"MM\":\n        return mapValue(parseNDigits(2, dateString), valueCallback);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"month\",\n          }),\n          valueCallback,\n        );\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return (\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // J, F, ..., D\n      case \"MMMMM\":\n        return match.month(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return (\n          match.month(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(value, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class StandAloneMonthParser extends Parser {\n  priority = 110;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => value - 1;\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return mapValue(\n          parseNumericPattern(numericPatterns.month, dateString),\n          valueCallback,\n        );\n      // 01, 02, ..., 12\n      case \"LL\":\n        return mapValue(parseNDigits(2, dateString), valueCallback);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"month\",\n          }),\n          valueCallback,\n        );\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return (\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // J, F, ..., D\n      case \"LLLLL\":\n        return match.month(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return (\n          match.month(dateString, { width: \"wide\", context: \"standalone\" }) ||\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(value, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setWeek } from \"../../../setWeek.mjs\";\nimport { startOfWeek } from \"../../../startOfWeek.mjs\";\nimport { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\n// Local week of year\nexport class LocalWeekParser extends Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"w\":\n        return parseNumericPattern(numericPatterns.week, dateString);\n      case \"wo\":\n        return match.ordinalNumber(dateString, { unit: \"week\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value, options) {\n    return startOfWeek(setWeek(date, value, options), options);\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { getWeek } from \"./getWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link setWeek} function options.\n */\n\n/**\n * @name setWeek\n * @category Week Helpers\n * @summary Set the local week to the given date.\n *\n * @description\n * Set the local week to the given date, saving the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param week - The week of the new date\n * @param options - An object with options\n *\n * @returns The new date with the local week set\n *\n * @example\n * // Set the 1st week to 2 January 2005 with default options:\n * const result = setWeek(new Date(2005, 0, 2), 1)\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // Set the 1st week to 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January:\n * const result = setWeek(new Date(2005, 0, 2), 1, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sun Jan 4 2004 00:00:00\n */\nexport function setWeek(date, week, options) {\n  const _date = toDate(date);\n  const diff = getWeek(_date, options) - week;\n  _date.setDate(_date.getDate() - diff * 7);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default setWeek;\n","import { setISOWeek } from \"../../../setISOWeek.mjs\";\nimport { startOfISOWeek } from \"../../../startOfISOWeek.mjs\";\nimport { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\n// ISO week of year\nexport class ISOWeekParser extends Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"I\":\n        return parseNumericPattern(numericPatterns.week, dateString);\n      case \"Io\":\n        return match.ordinalNumber(dateString, { unit: \"week\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value) {\n    return startOfISOWeek(setISOWeek(date, value));\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { getISOWeek } from \"./getISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name setISOWeek\n * @category ISO Week Helpers\n * @summary Set the ISO week to the given date.\n *\n * @description\n * Set the ISO week to the given date, saving the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param week - The ISO week of the new date\n *\n * @returns The new date with the ISO week set\n *\n * @example\n * // Set the 53rd ISO week to 7 August 2004:\n * const result = setISOWeek(new Date(2004, 7, 7), 53)\n * //=> Sat Jan 01 2005 00:00:00\n */\nexport function setISOWeek(date, week) {\n  const _date = toDate(date);\n  const diff = getISOWeek(_date) - week;\n  _date.setDate(_date.getDate() - diff * 7);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default setISOWeek;\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport {\n  isLeapYearIndex,\n  parseNDigits,\n  parseNumericPattern,\n} from \"../utils.mjs\";\n\nexport class DayOfYearParser extends Parser {\n  priority = 90;\n\n  subpriority = 1;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"D\":\n      case \"DD\":\n        return parseNumericPattern(numericPatterns.dayOfYear, dateString);\n      case \"Do\":\n        return match.ordinalNumber(dateString, { unit: \"date\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = isLeapYearIndex(year);\n    if (isLeapYear) {\n      return value >= 1 && value <= 366;\n    } else {\n      return value >= 1 && value <= 365;\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(0, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"E\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setDay } from \"../../../setDay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\n\n// Day of week\nexport class DayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // T\n      case \"EEEEE\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"D\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}\n","import { setDay } from \"../../../setDay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\n// Local day of week\nexport class LocalDayParser extends Parser {\n  priority = 90;\n  parse(dateString, token, match, options) {\n    const valueCallback = (value) => {\n      const wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n      return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;\n    };\n\n    switch (token) {\n      // 3\n      case \"e\":\n      case \"ee\": // 03\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      // 3rd\n      case \"eo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"day\",\n          }),\n          valueCallback,\n        );\n      // Tue\n      case \"eee\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // T\n      case \"eeeee\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // Tuesday\n      case \"eeee\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"i\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setDay } from \"../../../setDay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\n// Stand-alone local day of week\nexport class StandAloneLocalDayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match, options) {\n    const valueCallback = (value) => {\n      const wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n      return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;\n    };\n\n    switch (token) {\n      // 3\n      case \"c\":\n      case \"cc\": // 03\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      // 3rd\n      case \"co\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"day\",\n          }),\n          valueCallback,\n        );\n      // Tue\n      case \"ccc\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // T\n      case \"ccccc\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // Tuesday\n      case \"cccc\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"standalone\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"i\",\n    \"e\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setISODay } from \"../../../setISODay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\n// ISO day of week\nexport class ISODayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => {\n      if (value === 0) {\n        return 7;\n      }\n      return value;\n    };\n\n    switch (token) {\n      // 2\n      case \"i\":\n      case \"ii\": // 02\n        return parseNDigits(token.length, dateString);\n      // 2nd\n      case \"io\":\n        return match.ordinalNumber(dateString, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"short\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n      // T\n      case \"iiiii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          }),\n          valueCallback,\n        );\n      // Tu\n      case \"iiiiii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"short\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n      // Tuesday\n      case \"iiii\":\n      default:\n        return mapValue(\n          match.day(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"abbreviated\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"short\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 7;\n  }\n\n  set(date, _flags, value) {\n    date = setISODay(date, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { dayPeriodEnumToHours } from \"../utils.mjs\";\n\nexport class AMPMParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n      case \"aaa\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"aaaaa\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"b\", \"B\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { dayPeriodEnumToHours } from \"../utils.mjs\";\n\nexport class AMPMMidnightParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n      case \"bbb\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"bbbbb\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"B\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { dayPeriodEnumToHours } from \"../utils.mjs\";\n\n// in the morning, in the afternoon, in the evening, at night\nexport class DayPeriodParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"BBBBB\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour1to12Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"h\":\n        return parseNumericPattern(numericPatterns.hour12h, dateString);\n      case \"ho\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 12;\n  }\n\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else if (!isPM && value === 12) {\n      date.setHours(0, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n    return date;\n  }\n\n  incompatibleTokens = [\"H\", \"K\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour0to23Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"H\":\n        return parseNumericPattern(numericPatterns.hour23h, dateString);\n      case \"Ho\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 23;\n  }\n\n  set(date, _flags, value) {\n    date.setHours(value, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"h\", \"K\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour0To11Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"K\":\n        return parseNumericPattern(numericPatterns.hour11h, dateString);\n      case \"Ko\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n    return date;\n  }\n\n  incompatibleTokens = [\"h\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour1To24Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"k\":\n        return parseNumericPattern(numericPatterns.hour24h, dateString);\n      case \"ko\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 24;\n  }\n\n  set(date, _flags, value) {\n    const hours = value <= 24 ? value % 24 : value;\n    date.setHours(hours, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"h\", \"H\", \"K\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class MinuteParser extends Parser {\n  priority = 60;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"m\":\n        return parseNumericPattern(numericPatterns.minute, dateString);\n      case \"mo\":\n        return match.ordinalNumber(dateString, { unit: \"minute\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 59;\n  }\n\n  set(date, _flags, value) {\n    date.setMinutes(value, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class SecondParser extends Parser {\n  priority = 50;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"s\":\n        return parseNumericPattern(numericPatterns.second, dateString);\n      case \"so\":\n        return match.ordinalNumber(dateString, { unit: \"second\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 59;\n  }\n\n  set(date, _flags, value) {\n    date.setSeconds(value, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\nexport class FractionOfSecondParser extends Parser {\n  priority = 30;\n\n  parse(dateString, token) {\n    const valueCallback = (value) =>\n      Math.floor(value * Math.pow(10, -token.length + 3));\n    return mapValue(parseNDigits(token.length, dateString), valueCallback);\n  }\n\n  set(date, _flags, value) {\n    date.setMilliseconds(value);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.mjs\";\nimport { timezonePatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseTimezonePattern } from \"../utils.mjs\";\n\n// Timezone (ISO-8601. +00:00 is `'Z'`)\nexport class ISOTimezoneWithZParser extends Parser {\n  priority = 10;\n\n  parse(dateString, token) {\n    switch (token) {\n      case \"X\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalMinutes,\n          dateString,\n        );\n      case \"XX\":\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\n      case \"XXXX\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalSeconds,\n          dateString,\n        );\n      case \"XXXXX\":\n        return parseTimezonePattern(\n          timezonePatterns.extendedOptionalSeconds,\n          dateString,\n        );\n      case \"XXX\":\n      default:\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\n    }\n  }\n\n  set(date, flags, value) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(\n      date,\n      date.getTime() - getTimezoneOffsetInMilliseconds(date) - value,\n    );\n  }\n\n  incompatibleTokens = [\"t\", \"T\", \"x\"];\n}\n","import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.mjs\";\nimport { timezonePatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseTimezonePattern } from \"../utils.mjs\";\n\n// Timezone (ISO-8601)\nexport class ISOTimezoneParser extends Parser {\n  priority = 10;\n\n  parse(dateString, token) {\n    switch (token) {\n      case \"x\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalMinutes,\n          dateString,\n        );\n      case \"xx\":\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\n      case \"xxxx\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalSeconds,\n          dateString,\n        );\n      case \"xxxxx\":\n        return parseTimezonePattern(\n          timezonePatterns.extendedOptionalSeconds,\n          dateString,\n        );\n      case \"xxx\":\n      default:\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\n    }\n  }\n\n  set(date, flags, value) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(\n      date,\n      date.getTime() - getTimezoneOffsetInMilliseconds(date) - value,\n    );\n  }\n\n  incompatibleTokens = [\"t\", \"T\", \"X\"];\n}\n","import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseAnyDigitsSigned } from \"../utils.mjs\";\n\nexport class TimestampSecondsParser extends Parser {\n  priority = 40;\n\n  parse(dateString) {\n    return parseAnyDigitsSigned(dateString);\n  }\n\n  set(date, _flags, value) {\n    return [constructFrom(date, value * 1000), { timestampIsSet: true }];\n  }\n\n  incompatibleTokens = \"*\";\n}\n","import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseAnyDigitsSigned } from \"../utils.mjs\";\n\nexport class TimestampMillisecondsParser extends Parser {\n  priority = 20;\n\n  parse(dateString) {\n    return parseAnyDigitsSigned(dateString);\n  }\n\n  set(date, _flags, value) {\n    return [constructFrom(date, value), { timestampIsSet: true }];\n  }\n\n  incompatibleTokens = \"*\";\n}\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { getDefaultOptions } from \"./getDefaultOptions.mjs\";\nimport { enUS as defaultLocale } from \"./locale/en-US.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { longFormatters } from \"./_lib/format/longFormatters.mjs\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.mjs\";\nimport { parsers } from \"./parse/_lib/parsers.mjs\";\nimport { DateToSystemTimezoneSetter } from \"./parse/_lib/Setter.mjs\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { longFormatters, parsers };\n\n/**\n * The {@link parse} function options.\n */\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\n\nconst notWhitespaceRegExp = /\\S/;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 001, ..., 999                |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear](https://date-fns.org/docs/setISOWeekYear)\n *    and [setWeekYear](https://date-fns.org/docs/setWeekYear)).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateStr - The string to parse\n * @param formatStr - The string of tokens\n * @param referenceDate - defines values missing from the parsed dateString\n * @param options - An object with options.\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @returns The parsed date\n *\n * @throws `options.locale` must contain `match` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\nexport function parse(dateStr, formatStr, referenceDate, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  if (formatStr === \"\") {\n    if (dateStr === \"\") {\n      return toDate(referenceDate);\n    } else {\n      return constructFrom(referenceDate, NaN);\n    }\n  }\n\n  const subFnOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  // If timezone isn't specified, it will be set to the system timezone\n  const setters = [new DateToSystemTimezoneSetter()];\n\n  const tokens = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter in longFormatters) {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp);\n\n  const usedTokens = [];\n\n  for (let token of tokens) {\n    if (\n      !options?.useAdditionalWeekYearTokens &&\n      isProtectedWeekYearToken(token)\n    ) {\n      warnOrThrowProtectedError(token, formatStr, dateStr);\n    }\n    if (\n      !options?.useAdditionalDayOfYearTokens &&\n      isProtectedDayOfYearToken(token)\n    ) {\n      warnOrThrowProtectedError(token, formatStr, dateStr);\n    }\n\n    const firstCharacter = token[0];\n    const parser = parsers[firstCharacter];\n    if (parser) {\n      const { incompatibleTokens } = parser;\n      if (Array.isArray(incompatibleTokens)) {\n        const incompatibleToken = usedTokens.find(\n          (usedToken) =>\n            incompatibleTokens.includes(usedToken.token) ||\n            usedToken.token === firstCharacter,\n        );\n        if (incompatibleToken) {\n          throw new RangeError(\n            `The format string mustn't contain \\`${incompatibleToken.fullToken}\\` and \\`${token}\\` at the same time`,\n          );\n        }\n      } else if (parser.incompatibleTokens === \"*\" && usedTokens.length > 0) {\n        throw new RangeError(\n          `The format string mustn't contain \\`${token}\\` and any other token at the same time`,\n        );\n      }\n\n      usedTokens.push({ token: firstCharacter, fullToken: token });\n\n      const parseResult = parser.run(\n        dateStr,\n        token,\n        locale.match,\n        subFnOptions,\n      );\n\n      if (!parseResult) {\n        return constructFrom(referenceDate, NaN);\n      }\n\n      setters.push(parseResult.setter);\n\n      dateStr = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      // Replace two single quote characters with one single quote character\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      }\n\n      // Cut token from string, or, if string doesn't match the token, return Invalid Date\n      if (dateStr.indexOf(token) === 0) {\n        dateStr = dateStr.slice(token.length);\n      } else {\n        return constructFrom(referenceDate, NaN);\n      }\n    }\n  }\n\n  // Check if the remaining input contains something other than whitespace\n  if (dateStr.length > 0 && notWhitespaceRegExp.test(dateStr)) {\n    return constructFrom(referenceDate, NaN);\n  }\n\n  const uniquePrioritySetters = setters\n    .map((setter) => setter.priority)\n    .sort((a, b) => b - a)\n    .filter((priority, index, array) => array.indexOf(priority) === index)\n    .map((priority) =>\n      setters\n        .filter((setter) => setter.priority === priority)\n        .sort((a, b) => b.subPriority - a.subPriority),\n    )\n    .map((setterArray) => setterArray[0]);\n\n  let date = toDate(referenceDate);\n\n  if (isNaN(date.getTime())) {\n    return constructFrom(referenceDate, NaN);\n  }\n\n  const flags = {};\n  for (const setter of uniquePrioritySetters) {\n    if (!setter.validate(date, subFnOptions)) {\n      return constructFrom(referenceDate, NaN);\n    }\n\n    const result = setter.set(date, flags, subFnOptions);\n    // Result is tuple (date, flags)\n    if (Array.isArray(result)) {\n      date = result[0];\n      Object.assign(flags, result[1]);\n      // Result is date\n    } else {\n      date = result;\n    }\n  }\n\n  return constructFrom(referenceDate, date);\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default parse;\n","import { isDate } from \"./isDate.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  if (!isDate(date) && typeof date !== \"number\") {\n    return false;\n  }\n  const _date = toDate(date);\n  return !isNaN(Number(_date));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date) {\n  const _date = toDate(date);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\nimport { startOfYear } from \"./startOfYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date) {\n  const _date = toDate(date);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { millisecondsInDay } from \"./constants.mjs\";\nimport { startOfDay } from \"./startOfDay.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.mjs\";\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(dateLeft, dateRight) {\n  const startOfDayLeft = startOfDay(dateLeft);\n  const startOfDayRight = startOfDay(dateRight);\n\n  const timestampLeft =\n    startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  const timestampRight =\n    startOfDayRight.getTime() -\n    getTimezoneOffsetInMilliseconds(startOfDayRight);\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n  return Math.round((timestampLeft - timestampRight) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date) {\n  const cleanDate = toDate(date);\n  const _date = constructFrom(date, 0);\n  _date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.mjs\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.floor(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.mjs\";\nimport { getISOWeek } from \"../../getISOWeek.mjs\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.mjs\";\nimport { getWeek } from \"../../getWeek.mjs\";\nimport { getWeekYear } from \"../../getWeekYear.mjs\";\nimport { addLeadingZeros } from \"../addLeadingZeros.mjs\";\nimport { lightFormatters } from \"./lightFormatters.mjs\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    const originalDate = options._originalDate || date;\n    const timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    const originalDate = options._originalDate || date;\n    const timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    const originalDate = options._originalDate || date;\n    const timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    const originalDate = options._originalDate || date;\n    const timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    const originalDate = options._originalDate || date;\n    const timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    const originalDate = options._originalDate || date;\n    const timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.floor(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","import { isValid } from \"./isValid.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\nimport { formatters } from \"./_lib/format/formatters.mjs\";\nimport { longFormatters } from \"./_lib/format/longFormatters.mjs\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.mjs\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { longFormatters, formatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate,\n  };\n\n  const result = formatStr\n    .match(longFormattingTokensRegExp)\n    .map(function (substring) {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map(function (substring) {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return \"'\";\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return cleanEscapedString(substring);\n      }\n\n      const formatter = formatters[firstCharacter];\n      if (formatter) {\n        if (\n          !options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(substring)\n        ) {\n          warnOrThrowProtectedError(substring, formatStr, String(date));\n        }\n        if (\n          !options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(substring)\n        ) {\n          warnOrThrowProtectedError(substring, formatStr, String(date));\n        }\n        return formatter(\n          originalDate,\n          substring,\n          locale.localize,\n          formatterOptions,\n        );\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return substring;\n    })\n    .join(\"\");\n\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./getWeatherInfo.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./getWeatherInfo.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { events } from \"./events\";\nimport { format, parse } from \"date-fns\";\nimport \"./getWeatherInfo.css\";\n\nconst searchInput = document.querySelector(\"#search-input\");\nconst searchBtn = document.querySelector(\"#search-btn\");\nconst errorText = document.querySelector(\".error-text\");\n\nsearchBtn.addEventListener(\"click\", () => {\n  if (!checkInput()) return;\n\n  const selectedTemp = document.querySelector(\n    'input[name=\"radio\"]:checked',\n  ).value;\n  getCityInfo(searchInput.value, selectedTemp);\n  searchInput.value = \"\";\n});\n\nexport async function getCityInfo(city, temperature) {\n  showLoading();\n  try {\n    const weatherData = await getWeather(city);\n    const cleanedData = createUsefulDataArr(weatherData, temperature);\n    events.emit(\"newCitySearched\", cleanedData);\n  } catch (err) {\n    console.log(err);\n  } finally {\n    setTimeout(() => {\n      hideLoading();\n    }, 1000);\n  }\n}\n\nfunction checkInput() {\n  if (!searchInput.value) {\n    errorText.classList.remove(\"display-none\");\n    return false;\n  }\n  errorText.classList.add(\"display-none\");\n  return true;\n}\n\nfunction showLoading() {\n  document.querySelector(\"#loading\").style.display = \"flex\";\n}\n\nfunction hideLoading() {\n  document.querySelector(\"#loading\").style.display = \"none\";\n}\n\nasync function getWeather(location) {\n  const BASE_URL = \"https://api.weatherapi.com/v1\";\n  const API_METHOD = \"/forecast.json\";\n  const API_KEY = \"d5756cd98907479bb82210421240601\";\n  const DAYS = 3;\n  try {\n    const responseForecast = await fetch(\n      `${BASE_URL}${API_METHOD}?key=${API_KEY}&q=${location}&days=${DAYS}`,\n    );\n    const forecastData = await responseForecast.json();\n    return forecastData;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction createUsefulDataArr(data, temperature) {\n  const locationData = data.location;\n  const date = data.location.localtime;\n  const dateParsed = parse(date, \"yyyy-MM-dd HH:mm\", new Date());\n  const formattedLocalTime = format(dateParsed, \"h:mm a\");\n  const forecastDaysArr = Array.from(data.forecast.forecastday);\n\n  let dataArr = [];\n  forecastDaysArr.forEach((item) => {\n    const localDate = item.date;\n    const parsedLocalDate = parse(localDate, \"yyyy-MM-dd\", new Date());\n    const formattedDay = format(parsedLocalDate, \"EEEE\");\n    const formattedDate = format(parsedLocalDate, \"EEEE, do MMM ''yy\");\n\n    let newObj = {\n      temperature: temperature,\n      country: locationData.country,\n      city: locationData.name,\n      dateFormatted: formattedDate,\n      localTimeFormatted: formattedLocalTime,\n      dayFormatted: formattedDay,\n      avgTempC: item.day.avgtemp_c,\n      avgTempF: item.day.avgtemp_f,\n      maxTempC: item.day.maxtemp_c,\n      maxTempF: item.day.maxtemp_f,\n      minTempC: item.day.mintemp_c,\n      minTempF: item.day.mintemp_f,\n      condition: item.day.condition.text,\n      conditionIconUrl: item.day.condition.icon,\n      chanceOfRain: item.day.daily_chance_of_rain,\n      chanceOfSnow: item.day.daily_chance_of_snow,\n      humidity: item.day.avghumidity,\n      maxWindKph: item.day.maxwind_kph,\n      maxWindMph: item.day.maxwind_mph,\n    };\n    dataArr.push(newObj);\n  });\n  return dataArr;\n}\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./displayWeatherInfo.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./displayWeatherInfo.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import \"./displayWeatherInfo.css\";\nimport { events } from \"./events\";\n\nimport windSVG from \"./assets/wind.svg\";\nimport humiditySVG from \"./assets/humidity.svg\";\nimport snowSVG from \"./assets/snow.svg\";\nimport rainSVG from \"./assets/rain.svg\";\n\n// Get reference to body to change bg\nconst bodyElement = document.querySelector(\"body\");\n\n// Get references to top left container, inner container elements\nconst conditionLeft = document.querySelector(\n  \".top-left-container > .condition\",\n);\nconst cityLeft = document.querySelector(\".top-left-container > .city\");\nconst dateLeft = document.querySelector(\".top-left-container > .date\");\nconst localTimeLeft = document.querySelector(\n  \".top-left-container > .local-time\",\n);\nconst tempLeft = document.querySelector(\".top-left-container > .temperature\");\nconst conditionIconLeft = document.querySelector(\n  \".top-left-container > .condition-icon\",\n);\n\n// Get references to top right container, inner container elements\nconst humidityIcon = document.querySelector(\".humidity .icon\");\nconst humidityHeading = document.querySelector(\".humidity .heading\");\nconst humidityValue = document.querySelector(\".humidity .value\");\n\nconst rainIcon = document.querySelector(\".rain-chance .icon\");\nconst rainHeading = document.querySelector(\".rain-chance .heading\");\nconst rainValue = document.querySelector(\".rain-chance .value\");\n\nconst snowIcon = document.querySelector(\".snow-chance .icon\");\nconst snowHeading = document.querySelector(\".snow-chance .heading\");\nconst snowValue = document.querySelector(\".snow-chance .value\");\n\nconst windIcon = document.querySelector(\".wind-speed .icon\");\nconst windHeading = document.querySelector(\".wind-speed .heading\");\nconst windValue = document.querySelector(\".wind-speed .value\");\n\n// Get reference to main bottom container\nconst mainBottomContainer = document.querySelector(\".main-bottom-container\");\n\nevents.on(\"newCitySearched\", (weatherData) => {\n  renderMainBg(weatherData);\n  renderToLeft(weatherData);\n  renderToRight(weatherData);\n  renderToBottom(weatherData);\n});\n\n// Render the main-container bg color according to temperature\nfunction renderMainBg(data) {\n  bodyElement.classList.remove(...bodyElement.classList);\n\n  if (data[0].avgTempC < 10) {\n    bodyElement.classList.add(\"bg-cold\");\n  } else if (data[0].avgTempC > 10 && data[0].avgTempC < 25) {\n    bodyElement.classList.add(\"bg-warm\");\n  } else if (data[0].avgTempC > 25) {\n    bodyElement.classList.add(\"bg-hot\");\n  }\n}\n// Render to main-top-left\nfunction renderToLeft(data) {\n  conditionLeft.textContent = data[0].condition;\n  cityLeft.textContent = `${data[0].city}, ${data[0].country}`;\n  dateLeft.textContent = data[0].dateFormatted;\n  localTimeLeft.textContent = data[0].localTimeFormatted;\n  conditionIconLeft.src = data[0].conditionIconUrl;\n\n  data[0].temperature === \"fahrenheit\"\n    ? (tempLeft.textContent = `${data[0].avgTempF} °F`)\n    : (tempLeft.textContent = `${data[0].avgTempC} °C`);\n}\n\n// Render to main-top-right\nfunction renderToRight(data) {\n  humidityIcon.innerHTML = humiditySVG;\n  humidityHeading.textContent = \"Humidity\";\n  humidityValue.textContent = `${data[0].humidity}%`;\n\n  rainIcon.innerHTML = rainSVG;\n  rainHeading.textContent = \"Rain chance\";\n  rainValue.textContent = `${data[0].chanceOfRain}%`;\n\n  snowIcon.innerHTML = snowSVG;\n  snowHeading.textContent = \"Snow chance\";\n  snowValue.textContent = `${data[0].chanceOfSnow}%`;\n\n  windIcon.innerHTML = windSVG;\n  windHeading.textContent = \"Wind speed\";\n  data[0].temperature === \"fahrenheit\"\n    ? (windValue.textContent = `${data[0].maxWindMph} mph`)\n    : (windValue.textContent = `${data[0].maxWindKph} km/h`);\n}\n\n// Render to main-bottom\nfunction renderToBottom(data) {\n  mainBottomContainer.textContent = \"\";\n  data.forEach((item) => {\n    const containerDiv = document.createElement(\"div\");\n    containerDiv.classList.add(\"item\");\n\n    const firstRow = document.createElement(\"div\");\n    firstRow.textContent = item.dayFormatted;\n\n    const secondRow = document.createElement(\"div\");\n    item.temperature === \"fahrenheit\"\n      ? (secondRow.textContent = `${item.avgTempF} °F`)\n      : (secondRow.textContent = `${item.avgTempC} °C`);\n\n    const thirdRow = document.createElement(\"div\");\n    const thirdRowFirstTemp = document.createElement(\"div\");\n    item.temperature === \"fahrenheit\"\n      ? (thirdRowFirstTemp.textContent = `${item.minTempF} °F`)\n      : (thirdRowFirstTemp.textContent = `${item.minTempC} °C`);\n\n    const thirdRowSecondTemp = document.createElement(\"div\");\n    item.temperature === \"fahrenheit\"\n      ? (thirdRowSecondTemp.textContent = `${item.maxTempF} °F`)\n      : (thirdRowSecondTemp.textContent = `${item.maxTempC} °C`);\n\n    thirdRow.append(thirdRowFirstTemp, thirdRowSecondTemp);\n\n    const fourthRow = document.createElement(\"img\");\n    fourthRow.src = item.conditionIconUrl;\n\n    containerDiv.append(firstRow, secondRow, thirdRow, fourthRow);\n    mainBottomContainer.append(containerDiv);\n  });\n}\n","import \"./style.css\";\nimport \"./getWeatherInfo.js\";\nimport \"./displayWeatherInfo.js\";\nimport { getCityInfo } from \"./getWeatherInfo.js\";\nimport loadingSVG from \"./assets/loading.svg\";\nimport githubSVG from \"./assets/github-mark.svg\";\n\nconst loading = document.querySelector(\"#loading\");\nconst footerIconAnchor = document.querySelector(\".footer-icon > a\");\n\nloading.innerHTML = loadingSVG;\nfooterIconAnchor.innerHTML = githubSVG;\nfooterIconAnchor.setAttribute(\"href\", \"https://github.com/myinan\");\nfooterIconAnchor.setAttribute(\"title\", \"github.com/myinan\");\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  getCityInfo(\"Bursa\");\n});\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call","nc","locals","events","on","eventName","fn","off","emit","forEach","constructFrom","date","value","Date","constructor","defaultOptions","getDefaultOptions","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","width","String","defaultWidth","formats","formatLong","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","valuesArray","context","formattingValues","defaultFormattingWidth","values","argumentCallback","localize","ordinalNumber","dirtyNumber","_options","number","Number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","Array","isArray","array","predicate","test","findIndex","object","findKey","valueCallback","rest","slice","parsePattern","parseInt","parseResult","any","enUS","code","formatDistance","token","tokenValue","replace","addSuffix","comparison","formatRelative","_date","_baseDate","weekStartsOn","firstWeekContainsDate","toDate","argument","argStr","NaN","dateLongFormatter","pattern","timeLongFormatter","longFormatters","p","P","datePattern","timePattern","dateTimeFormat","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isProtectedDayOfYearToken","isProtectedWeekYearToken","warnOrThrowProtectedError","format","input","_message","subject","toLowerCase","message","console","warn","includes","RangeError","Setter","subPriority","validate","_utcDate","ValueSetter","validateValue","setValue","priority","super","set","flags","DateToSystemTimezoneSetter","timestampIsSet","fromDate","setFullYear","getFullYear","getMonth","getDate","setHours","getHours","getMinutes","getSeconds","getMilliseconds","transpose","Parser","run","dateString","parse","setter","_value","Math","pow","millisecondsInWeek","millisecondsInDay","numericPatterns","timezonePatterns","mapValue","parseFnResult","mapFn","parseNumericPattern","parseTimezonePattern","parseAnyDigitsSigned","parseNDigits","RegExp","parseNDigitsSigned","dayPeriodEnumToHours","normalizeTwoDigitYear","twoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","floor","isLeapYearIndex","year","startOfWeek","locale","getDay","diff","setDate","getWeekYear","firstWeekOfNextYear","startOfNextYear","firstWeekOfThisYear","startOfThisYear","getTime","startOfISOWeek","getWeek","firstWeek","startOfWeekYear","round","getISOWeekYear","fourthOfJanuaryOfNextYear","fourthOfJanuaryOfThisYear","getISOWeek","fourthOfJanuary","startOfISOWeekYear","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","addDays","amount","isNaN","setDay","currentDay","delta","setISODay","getISODay","getTimezoneOffsetInMilliseconds","utcDate","UTC","setUTCFullYear","parsers","G","incompatibleTokens","y","isTwoDigitYear","unit","normalizedTwoDigitYear","Y","R","_flags","firstWeekOfYear","u","Q","setMonth","q","M","L","w","week","setWeek","I","setISOWeek","isLeapYear","D","subpriority","E","wholeWeekDays","c","b","B","h","isPM","H","K","hours","m","setMinutes","s","setSeconds","S","setMilliseconds","X","x","t","T","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","notWhitespaceRegExp","unescapedLatinCharacterRegExp","dateStr","formatStr","referenceDate","assign","subFnOptions","setters","tokens","substring","firstCharacter","longFormatter","usedTokens","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","parser","incompatibleToken","find","usedToken","fullToken","indexOf","uniquePrioritySetters","sort","filter","setterArray","isValid","startOfDay","getDayOfYear","dateLeft","dateRight","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","differenceInCalendarDays","cleanDate","startOfYear","addLeadingZeros","targetLength","abs","padStart","lightFormatters","signedYear","dayPeriodEnumValue","toUpperCase","numberOfDigits","milliseconds","formatters","signedWeekYear","weekYear","ceil","isoWeek","dayOfYear","dayOfWeek","localDayOfWeek","isoDayOfWeek","_localize","timezoneOffset","_originalDate","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","O","formatTimezoneShort","z","originalDate","offset","delimiter","sign","absOffset","minutes","formatterOptions","matched","formatter","searchInput","searchBtn","errorText","async","getCityInfo","city","temperature","display","cleanedData","locationData","location","formattedLocalTime","localtime","forecastDaysArr","from","forecast","forecastday","dataArr","parsedLocalDate","formattedDay","formattedDate","country","name","dateFormatted","localTimeFormatted","dayFormatted","avgTempC","avgtemp_c","avgTempF","avgtemp_f","maxTempC","maxtemp_c","maxTempF","maxtemp_f","minTempC","mintemp_c","minTempF","mintemp_f","condition","text","conditionIconUrl","icon","chanceOfRain","daily_chance_of_rain","chanceOfSnow","daily_chance_of_snow","humidity","avghumidity","maxWindKph","maxwind_kph","maxWindMph","maxwind_mph","createUsefulDataArr","responseForecast","fetch","json","error","log","getWeather","err","setTimeout","addEventListener","classList","add","selectedTemp","bodyElement","conditionLeft","cityLeft","localTimeLeft","tempLeft","conditionIconLeft","humidityIcon","humidityHeading","humidityValue","rainIcon","rainHeading","rainValue","snowIcon","snowHeading","snowValue","windIcon","windHeading","windValue","mainBottomContainer","weatherData","textContent","src","renderToLeft","innerHTML","renderToRight","containerDiv","firstRow","secondRow","thirdRow","thirdRowFirstTemp","thirdRowSecondTemp","append","fourthRow","renderToBottom","loading","footerIconAnchor"],"sourceRoot":""}